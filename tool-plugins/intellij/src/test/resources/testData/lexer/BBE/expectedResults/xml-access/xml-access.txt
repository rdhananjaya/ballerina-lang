import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The XML element with nested children.')
WHITE_SPACE ('\n    ')
xml ('xml')
WHITE_SPACE (' ')
identifier ('bookXML')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
XML_LITERAL_START ('xml `')
XML_TAG_OPEN ('<')
XML_QNAME ('book')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                ')
XML_TAG_OPEN ('<')
XML_QNAME ('name')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Sherlock Holmes')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('name')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                ')
XML_TAG_OPEN ('<')
XML_QNAME ('author')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                    ')
XML_TAG_OPEN ('<')
XML_QNAME ('fname')
XML_QNAME (' title')
EQUALS ('=')
DOUBLE_QUOTE ('"')
XML_DOUBLE_QUOTED_STRING_SEQUENCE ('Sir')
DOUBLE_QUOTE_END ('"')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Arthur')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('fname')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                    ')
XML_TAG_OPEN ('<')
XML_QNAME ('mname')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Conan')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('mname')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                    ')
XML_TAG_OPEN ('<')
XML_QNAME ('lname')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('Doyle')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('lname')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                ')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('author')
XML_TAG_CLOSE ('>')
XML_TEXT_SEQUENCE ('\n                ')
XML_COMMENT_START ('<!--')
XML_COMMENT_TEXT ('Price: $10-->')
XML_TEXT_SEQUENCE ('\n                ')
XML_TAG_OPEN_SLASH ('</')
XML_QNAME ('book')
XML_TAG_CLOSE ('>')
XML_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n    \n    ')
LINE_COMMENT ('// You can access child XML items using the field-based or index-based syntax.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
. ('.')
identifier ('author')
. ('.')
identifier ('fname')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
[ ('[')
QUOTED_STRING_LITERAL ('"author"')
] (']')
[ ('[')
QUOTED_STRING_LITERAL ('"fname"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Accessing a non existing child will returns nil.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
. ('.')
identifier ('ISBN')
. ('.')
identifier ('code')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
[ ('[')
QUOTED_STRING_LITERAL ('"ISBN"')
] (']')
[ ('[')
QUOTED_STRING_LITERAL ('"code"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Result of the above field-based or index-based access is another XML. ')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Any XML function can be invoked on top of the resulting XML.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
. ('.')
identifier ('author')
. ('.')
identifier ('fname')
. ('.')
identifier ('getTextValue')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
[ ('[')
QUOTED_STRING_LITERAL ('"author"')
] (']')
[ ('[')
QUOTED_STRING_LITERAL ('"fname"')
] (']')
. ('.')
identifier ('getTextValue')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// You can also retrieve attributes of the resulting child XML.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
. ('.')
identifier ('author')
. ('.')
identifier ('fname')
@ ('@')
[ ('[')
QUOTED_STRING_LITERAL ('"title"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('bookXML')
[ ('[')
QUOTED_STRING_LITERAL ('"author"')
] (']')
[ ('[')
QUOTED_STRING_LITERAL ('"fname"')
] (']')
@ ('@')
[ ('[')
QUOTED_STRING_LITERAL ('"title"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
