import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Documentation attachments are non executable constructs in Ballerina."')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the documentation attachment for object `DummyObject`.')
WHITE_SPACE ('\n')
MARKDOWN_DOCUMENTATION_LINE_START ('# ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' is a user defined object type in Ballerina program. This')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' is used to hold two string data fields and')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('one attached function definition, ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('doThatOnObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' performs that functionality')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('on the associated ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' instance.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n#')
PARAMETER_DOCUMENTATION_START ('\n# + ')
PARAMETER_NAME ('fieldOne')
DESCRIPTION_SEPARATOR (' - ')
MARKDOWN_DOCUMENTATION_TEXT ('This is the description for the ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (''s field ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('fieldOne')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT ('.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('             ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('F')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' doc prefix is used to mark a field on Object.')
PARAMETER_DOCUMENTATION_START ('\n# + ')
PARAMETER_NAME ('fieldTwo')
DESCRIPTION_SEPARATOR (' - ')
MARKDOWN_DOCUMENTATION_TEXT ('This is the description for the ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (''s field ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('fieldTwo')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT ('.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('             ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('F')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' doc prefix is used to mark a field on Object.')
public ('\npublic')
WHITE_SPACE (' ')
type ('type')
WHITE_SPACE (' ')
identifier ('DummyObject')
WHITE_SPACE (' ')
abstract ('abstract')
WHITE_SPACE (' ')
object ('object')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
public ('public')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('fieldOne')
; (';')
WHITE_SPACE ('\n    ')
public ('public')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('fieldTwo')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This is the documentation attachment for function `doThatOnObject`.')
WHITE_SPACE ('\n    ')
MARKDOWN_DOCUMENTATION_LINE_START ('# ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('doThatOnObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' is an attached function for the object ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT ('.')
WHITE_SPACE ('\n    ')
MARKDOWN_DOCUMENTATION_LINE_START ('#')
WHITE_SPACE ('\n    ')
PARAMETER_DOCUMENTATION_START ('# + ')
PARAMETER_NAME ('paramOne')
DESCRIPTION_SEPARATOR (' - ')
MARKDOWN_DOCUMENTATION_TEXT ('This is the description for the ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('doThatOnObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' function')
WHITE_SPACE ('\n    ')
MARKDOWN_DOCUMENTATION_LINE_START ('# ')
MARKDOWN_DOCUMENTATION_TEXT ('             parameter. ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('P')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' doc prefix is used to mark a parameter for')
WHITE_SPACE ('\n    ')
MARKDOWN_DOCUMENTATION_LINE_START ('# ')
MARKDOWN_DOCUMENTATION_TEXT ('             a function.')
WHITE_SPACE ('\n    ')
RETURN_PARAMETER_DOCUMENTATION_START ('# + return - ')
MARKDOWN_DOCUMENTATION_TEXT ('This is the description for the ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('doThatOnObject')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' function Return')
WHITE_SPACE ('\n    ')
MARKDOWN_DOCUMENTATION_LINE_START ('# ')
MARKDOWN_DOCUMENTATION_TEXT ('           value. ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('R')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' doc prefix is used to mark a return value for a function.')
WHITE_SPACE ('\n    ')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('doThatOnObject')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('paramOne')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
boolean ('boolean')
) (')')
; (';')
WHITE_SPACE ('\n\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the documentation attachment for record `DummyType`.')
WHITE_SPACE ('\n')
MARKDOWN_DOCUMENTATION_LINE_START ('# ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyType')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' is a user defined record type in Ballerina program.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('This ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyType')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' is used to hold a string type data field and an int type')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('data field.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n#')
PARAMETER_DOCUMENTATION_START ('\n# + ')
PARAMETER_NAME ('fieldOne')
DESCRIPTION_SEPARATOR (' - ')
MARKDOWN_DOCUMENTATION_TEXT ('This is the description for the ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyType')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (''s field ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('fieldOne')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT ('.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('             ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('F')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' doc prefix is used to mark a field on Record.')
PARAMETER_DOCUMENTATION_START ('\n# + ')
PARAMETER_NAME ('fieldTwo')
DESCRIPTION_SEPARATOR (' - ')
MARKDOWN_DOCUMENTATION_TEXT ('This is the description for the ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('DummyType')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (''s field ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('fieldTwo')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT ('.')
MARKDOWN_DOCUMENTATION_LINE_START ('\n# ')
MARKDOWN_DOCUMENTATION_TEXT ('             ')
SINGLE_BACKTICK_MARKDOWN_START ('`')
SINGLE_BACKTICK_CONTENT ('F')
SINGLE_BACKTICK_MARKDOWN_END ('`')
MARKDOWN_DOCUMENTATION_TEXT (' doc prefix is used to mark a field on Record.')
public ('\npublic')
WHITE_SPACE (' ')
type ('type')
WHITE_SPACE (' ')
identifier ('DummyType')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('fieldOne')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('fieldTwo')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
