import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
identifier ('error')
WHITE_SPACE (' ')
identifier ('unknownOpError')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"unknown operation"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// A function named `main` acts as a default entry point to a Ballerina program.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// This entry function can have zero or more parameters, and can either return')
WHITE_SPACE ('\n')
LINE_COMMENT ('// an int or can have no return value.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('i')
, (',')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('j')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('s')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"add"')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Operation: Addition"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('add')
( ('(')
identifier ('i')
, (',')
WHITE_SPACE (' ')
identifier ('j')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('s')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"subtract"')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Operation: Subtraction"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('subtract')
( ('(')
identifier ('i')
, (',')
WHITE_SPACE (' ')
identifier ('j')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('unknownOpError')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// A public function to perform a math operation, where the operation `op` is a')
WHITE_SPACE ('\n')
LINE_COMMENT ('// defaultable param with the default value `add`.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('performMathOp')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('op')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"add"')
, (',')
WHITE_SPACE (' ')
int ('int')
... ('...')
WHITE_SPACE (' ')
identifier ('values')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('isKnownOp')
( ('(')
identifier ('op')
) (')')
WHITE_SPACE (' ')
&& ('&&')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('values')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('invalidArgsError')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"insufficient arguments specified"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n        ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('invalidArgsError')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('value')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('values')
[ ('[')
DECIMAL_INTEGER_LITERAL ('0')
] (']')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('op')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"add"')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
HALF_OPEN_RANGE ('..<')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('values')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('value')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('add')
( ('(')
identifier ('value')
, (',')
WHITE_SPACE (' ')
identifier ('values')
[ ('[')
identifier ('i')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('value')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('op')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"subtract"')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
foreach ('foreach')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
HALF_OPEN_RANGE ('..<')
WHITE_SPACE (' ')
lengthof ('lengthof')
WHITE_SPACE (' ')
identifier ('values')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('value')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('subtract')
( ('(')
identifier ('value')
, (',')
WHITE_SPACE (' ')
identifier ('values')
[ ('[')
identifier ('i')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('value')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
throw ('throw')
WHITE_SPACE (' ')
identifier ('unknownOpError')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('add')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('i')
, (',')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('j')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('j')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('subtract')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('i')
, (',')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('j')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
- ('-')
WHITE_SPACE (' ')
identifier ('j')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('isKnownOp')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('op')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
boolean ('boolean')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('op')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"add"')
WHITE_SPACE (' ')
|| ('||')
WHITE_SPACE (' ')
identifier ('op')
WHITE_SPACE (' ')
== ('==')
QUOTED_STRING_LITERAL ('"subtract"')
; (';')
WHITE_SPACE ('\n')
} ('}')
